{
  "hash": "cc47cc3345e36f8991231db66ba0819e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1: Tidyverse\"\nauthor: \"Mohamed, Islam\"\nmatriculation number: \"21650912\"\n---\n\n\n# Challenge 1: \n## Analyze the sales by location with a bar plot.\n\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_792273fb4b31369e845d5996047576c1'}\n\n```{.r .cell-code}\n# Loading libraries ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyverse' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tibble' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'purrr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'stringr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'forcats' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'lubridate' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'readxl' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(\"writexl\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'writexl' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\n# Importing Files ----\nbikes_tbl      <- read_excel(path = \"01_tidyverse_files/Data_bikes/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"01_tidyverse_files/Data_bikes/01_bike_sales/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl  <- read_excel(\"01_tidyverse_files/Data_bikes/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# Joining/connecting Data ----\nbike_orderlines_joined_tbl <- orderlines_tbl %>% \n  left_join(bikes_tbl, by =c(\"product.id\"=\"bike.id\")) %>%\n  left_join(bikeshops_tbl, by =c(\"customer.id\"=\"bikeshop.id\"))\n\n# Data Wrangling ----\n\nbike_state_wrangled_tbl <- bike_orderlines_joined_tbl%>%\n  separate(col=location,\n           into= c(\"city\",\"state\"),\n           sep= \",\")%>%\n  mutate(total.price= price * quantity)%>%\n  select(-...1, -gender)%>%\n  select(order.id,city,state,order.date, total.price, contains(\"model\"),\n         contains(\"category\"), price, quantity, everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n  \n\n# Business Analysis ----\n# Sales by Location/State ----\n\n# Data Manipulation\n\nstate_sales <- bike_state_wrangled_tbl%>%\n  select(state,total_price)%>%\n  group_by(state)%>%\n  summarize(sales=sum(total_price))%>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n# Data visualization\nstate_sales %>%\n  ggplot(aes(x = state, y = sales)) +\n  geom_col(fill = \"#d6902d\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text), vjust = -0.5, angle = 180) + # Adding labels to the bars vertically\n  geom_smooth(method = \"lm\", se = FALSE) + # trendline\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  + \n  # Formatting plot\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by States\",\n    x = \"States\",\n    y = \"Revenue\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n### Which state has the highest revenue?\n\nThe state **\"North Rhine-Westphalia\"** has the highest revenue.\n\n# Challenge\n\n## Analyze the sales by location and year. \n\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_2932c1aa9abcbb3a742c1f52eaee39d2'}\n\n```{.r .cell-code}\n# Sales by Location and Year----\n\n# Data Manipulation\nsales_by_location_year <- bike_state_wrangled_tbl %>%\n  \n  # Enriching columns by adding a year column\n  select(order_date, total_price,state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and state\n  group_by(year,state) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Visualization\nsales_by_location_year %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and State\",\n    fill = \"States\" # Changes the legend name\n  )\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}